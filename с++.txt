#include <iostream>
#include <vector>
using namespace std;

const int SIZE = 5;

void displayBoard(vector<vector<char>>& board) {
    cout << "  ";
    for (int i = 0; i < SIZE; ++i) {
        cout << i << " ";
    }
    cout << endl;

    for (int i = 0; i < SIZE; ++i) {
        cout << i << " ";
        for (int j = 0; j < SIZE; ++j) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
}

bool isValidPlacement(vector<vector<char>>& board, int row, int col) {
    return row >= 0 && row < SIZE && col >= 0 && col < SIZE && board[row][col] == '-';
}

void placeShips(vector<vector<char>>& board) {
    int ships = SIZE; // Number of ships equal to board size

    while (ships > 0) {
        int row = rand() % SIZE;
        int col = rand() % SIZE;

        if (isValidPlacement(board, row, col)) {
            board[row][col] = 'S';
            ships--;
        }
    }
}

bool isHit(vector<vector<char>>& board, int row, int col) {
    return board[row][col] == 'S';
}

int main() {
    vector<vector<char>> board(SIZE, vector<char>(SIZE, '-'));

    placeShips(board);

    int attempts = SIZE * SIZE;
    int hits = 0;

    while (attempts > 0 && hits < SIZE) {
        cout << "Attempts left: " << attempts << endl;
        displayBoard(board);

        int row, col;
        cout << "Enter row and column to attack (0-" << SIZE - 1 << "): ";
        cin >> row >> col;

        if (isValidPlacement(board, row, col)) {
            attempts--;
            if (isHit(board, row, col)) {
                cout << "Hit!" << endl;
                board[row][col] = 'X';
                hits++;
            } else {
                cout << "Miss!" << endl;
                board[row][col] = 'O';
            }
        } else {
            cout << "Invalid input or already guessed!" << endl;
        }
    }

    if (hits == SIZE) {
        cout << "Congratulations! You sank all the ships!" << endl;
    } else {
        cout << "Game over! Ships remaining." << endl;
    }

    return 0;
}
